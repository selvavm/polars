(function() {var implementors = {};
implementors["arrow_format"] = [{"text":"impl <a class=\"trait\" href=\"flatbuffers/endian_scalar/trait.EndianScalar.html\" title=\"trait flatbuffers::endian_scalar::EndianScalar\">EndianScalar</a> for <a class=\"struct\" href=\"arrow_format/ipc/Message/struct.CompressionType.html\" title=\"struct arrow_format::ipc::Message::CompressionType\">CompressionType</a>","synthetic":false,"types":["arrow_format::ipc::Message::CompressionType"]},{"text":"impl <a class=\"trait\" href=\"flatbuffers/endian_scalar/trait.EndianScalar.html\" title=\"trait flatbuffers::endian_scalar::EndianScalar\">EndianScalar</a> for <a class=\"struct\" href=\"arrow_format/ipc/Message/struct.BodyCompressionMethod.html\" title=\"struct arrow_format::ipc::Message::BodyCompressionMethod\">BodyCompressionMethod</a>","synthetic":false,"types":["arrow_format::ipc::Message::BodyCompressionMethod"]},{"text":"impl <a class=\"trait\" href=\"flatbuffers/endian_scalar/trait.EndianScalar.html\" title=\"trait flatbuffers::endian_scalar::EndianScalar\">EndianScalar</a> for <a class=\"struct\" href=\"arrow_format/ipc/Message/struct.MessageHeader.html\" title=\"struct arrow_format::ipc::Message::MessageHeader\">MessageHeader</a>","synthetic":false,"types":["arrow_format::ipc::Message::MessageHeader"]},{"text":"impl <a class=\"trait\" href=\"flatbuffers/endian_scalar/trait.EndianScalar.html\" title=\"trait flatbuffers::endian_scalar::EndianScalar\">EndianScalar</a> for <a class=\"struct\" href=\"arrow_format/ipc/Schema/struct.MetadataVersion.html\" title=\"struct arrow_format::ipc::Schema::MetadataVersion\">MetadataVersion</a>","synthetic":false,"types":["arrow_format::ipc::Schema::MetadataVersion"]},{"text":"impl <a class=\"trait\" href=\"flatbuffers/endian_scalar/trait.EndianScalar.html\" title=\"trait flatbuffers::endian_scalar::EndianScalar\">EndianScalar</a> for <a class=\"struct\" href=\"arrow_format/ipc/Schema/struct.Feature.html\" title=\"struct arrow_format::ipc::Schema::Feature\">Feature</a>","synthetic":false,"types":["arrow_format::ipc::Schema::Feature"]},{"text":"impl <a class=\"trait\" href=\"flatbuffers/endian_scalar/trait.EndianScalar.html\" title=\"trait flatbuffers::endian_scalar::EndianScalar\">EndianScalar</a> for <a class=\"struct\" href=\"arrow_format/ipc/Schema/struct.UnionMode.html\" title=\"struct arrow_format::ipc::Schema::UnionMode\">UnionMode</a>","synthetic":false,"types":["arrow_format::ipc::Schema::UnionMode"]},{"text":"impl <a class=\"trait\" href=\"flatbuffers/endian_scalar/trait.EndianScalar.html\" title=\"trait flatbuffers::endian_scalar::EndianScalar\">EndianScalar</a> for <a class=\"struct\" href=\"arrow_format/ipc/Schema/struct.Precision.html\" title=\"struct arrow_format::ipc::Schema::Precision\">Precision</a>","synthetic":false,"types":["arrow_format::ipc::Schema::Precision"]},{"text":"impl <a class=\"trait\" href=\"flatbuffers/endian_scalar/trait.EndianScalar.html\" title=\"trait flatbuffers::endian_scalar::EndianScalar\">EndianScalar</a> for <a class=\"struct\" href=\"arrow_format/ipc/Schema/struct.DateUnit.html\" title=\"struct arrow_format::ipc::Schema::DateUnit\">DateUnit</a>","synthetic":false,"types":["arrow_format::ipc::Schema::DateUnit"]},{"text":"impl <a class=\"trait\" href=\"flatbuffers/endian_scalar/trait.EndianScalar.html\" title=\"trait flatbuffers::endian_scalar::EndianScalar\">EndianScalar</a> for <a class=\"struct\" href=\"arrow_format/ipc/Schema/struct.TimeUnit.html\" title=\"struct arrow_format::ipc::Schema::TimeUnit\">TimeUnit</a>","synthetic":false,"types":["arrow_format::ipc::Schema::TimeUnit"]},{"text":"impl <a class=\"trait\" href=\"flatbuffers/endian_scalar/trait.EndianScalar.html\" title=\"trait flatbuffers::endian_scalar::EndianScalar\">EndianScalar</a> for <a class=\"struct\" href=\"arrow_format/ipc/Schema/struct.IntervalUnit.html\" title=\"struct arrow_format::ipc::Schema::IntervalUnit\">IntervalUnit</a>","synthetic":false,"types":["arrow_format::ipc::Schema::IntervalUnit"]},{"text":"impl <a class=\"trait\" href=\"flatbuffers/endian_scalar/trait.EndianScalar.html\" title=\"trait flatbuffers::endian_scalar::EndianScalar\">EndianScalar</a> for <a class=\"struct\" href=\"arrow_format/ipc/Schema/struct.Type.html\" title=\"struct arrow_format::ipc::Schema::Type\">Type</a>","synthetic":false,"types":["arrow_format::ipc::Schema::Type"]},{"text":"impl <a class=\"trait\" href=\"flatbuffers/endian_scalar/trait.EndianScalar.html\" title=\"trait flatbuffers::endian_scalar::EndianScalar\">EndianScalar</a> for <a class=\"struct\" href=\"arrow_format/ipc/Schema/struct.DictionaryKind.html\" title=\"struct arrow_format::ipc::Schema::DictionaryKind\">DictionaryKind</a>","synthetic":false,"types":["arrow_format::ipc::Schema::DictionaryKind"]},{"text":"impl <a class=\"trait\" href=\"flatbuffers/endian_scalar/trait.EndianScalar.html\" title=\"trait flatbuffers::endian_scalar::EndianScalar\">EndianScalar</a> for <a class=\"struct\" href=\"arrow_format/ipc/Schema/struct.Endianness.html\" title=\"struct arrow_format::ipc::Schema::Endianness\">Endianness</a>","synthetic":false,"types":["arrow_format::ipc::Schema::Endianness"]},{"text":"impl <a class=\"trait\" href=\"flatbuffers/endian_scalar/trait.EndianScalar.html\" title=\"trait flatbuffers::endian_scalar::EndianScalar\">EndianScalar</a> for <a class=\"struct\" href=\"arrow_format/ipc/SparseTensor/struct.SparseMatrixCompressedAxis.html\" title=\"struct arrow_format::ipc::SparseTensor::SparseMatrixCompressedAxis\">SparseMatrixCompressedAxis</a>","synthetic":false,"types":["arrow_format::ipc::SparseTensor::SparseMatrixCompressedAxis"]},{"text":"impl <a class=\"trait\" href=\"flatbuffers/endian_scalar/trait.EndianScalar.html\" title=\"trait flatbuffers::endian_scalar::EndianScalar\">EndianScalar</a> for <a class=\"struct\" href=\"arrow_format/ipc/SparseTensor/struct.SparseTensorIndex.html\" title=\"struct arrow_format::ipc::SparseTensor::SparseTensorIndex\">SparseTensorIndex</a>","synthetic":false,"types":["arrow_format::ipc::SparseTensor::SparseTensorIndex"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()